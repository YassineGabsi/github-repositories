{"version":3,"sources":["Components/Repository.js","Components/Repositories.js","Components/Home.js","Components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Repository","props","className","href","repo","owner","login","name","target","description","language","forks","icon","faProjectDiagram","color","size","license","faCertificate","date","dateFormatted","Date","getDay","getMonth","formatDate","updated_at","Repositories","useState","githubUser","setGithubUser","repos","setRepos","filteredRepos","setFilteredRepos","isLoading","setIsLoading","user","useParams","history","useHistory","useEffect","getUser","getRepos","axios","get","then","res","data","catch","error","push","console","log","type","height","width","src","avatar_url","alt","bio","faUsers","followers","following","faStar","email","faEnvelope","blog","faLink","onChange","e","searchLabel","value","toLowerCase","tempRepos","filter","includes","searchRepo","placeholder","length","map","id","Home","document","getElementsByClassName","addEventListener","event","keyCode","click","faGithub","faSearch","onClick","NotFound","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0dae8cc9.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport '../Assets/Repository.scss';\r\nimport {faProjectDiagram, faCertificate} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function Repository(props) {\r\n\r\n    /**\r\n     * The date fetched from the Github API is in YYYY-MM-DD HH:MM:SS\r\n     * In that case, the date should be formatted in a readable format\r\n     * This function ( formatDate ) is responsible of formatting the date\r\n     */\r\n\r\n    const formatDate = (date) => {\r\n        const  months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const dateFormatted = new Date(date)\r\n        return dateFormatted.getDay() + ' ' +  months[dateFormatted.getMonth()];\r\n    }\r\n\r\n    return (\r\n        <div className={'repo-card'}>\r\n            <a className={'repo-name'} href={'https://github.com/' + props.repo.owner.login + '/' + props.repo.name} target='_blank'>\r\n                {props.repo.name}\r\n            </a>\r\n\r\n            <div className={'repo-description'}>\r\n                {props.repo.description}\r\n            </div>\r\n\r\n            <div className={'repo-card-footer mt-2'}>\r\n                {\r\n                    props.repo.language && <div className={'repo-language me-3 d-flex align-items-center justify-content-center'}>\r\n                        <span className={'circle-language'}/>\r\n                        {props.repo.language}\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    props.repo.forks > 0 ?  <div className={'repo-forks'}>\r\n                        <FontAwesomeIcon className={'icon-followers me-2'} icon={faProjectDiagram} color={'#000000'} size={'sm'}/>\r\n                        {props.repo.forks}\r\n                    </div> : null\r\n                }\r\n\r\n                {\r\n                    props.repo.license && <div className={'repo-licence'}>\r\n                        <FontAwesomeIcon className={'icon-followers me-2'} icon={faCertificate} color={'#000000'} size={'sm'}/>\r\n                        {props.repo.license.name}\r\n                    </div>\r\n                }\r\n\r\n                <div className={'repo-updated-on'}>\r\n                    Updated at {formatDate(props.repo.updated_at)}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={'hr-container'}>\r\n                <hr className={'hr-element'}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useParams, useHistory} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nimport '../Assets/Repositories.scss';\r\nimport {faStar, faUsers, faEnvelope, faLink} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport Repository from \"./Repository\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\nexport default function Repositories() {\r\n\r\n    const [githubUser, setGithubUser] = useState({});\r\n    const [repos, setRepos] = useState([]);\r\n    const [filteredRepos, setFilteredRepos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const {user} = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        /**\r\n         * When the component mounts, it fetches the user infos and\r\n         * the repositories of the given users through these functions\r\n         * - getUser : fetches the user infos from the Github API\r\n         * - getRepos : fetches the user repositories from the Github API\r\n         */\r\n        getUser();\r\n        getRepos();\r\n    }, []);\r\n\r\n    /**\r\n     * On changing the search input value, this function is called.\r\n     * It's responsible of filtering the repos using the specific repo name\r\n     * - searchLabel: the search repos name\r\n     * - tempRepos: a temporary array to get the filtered repos from the original set of repos\r\n     * - setFilteredRepos() : sets the new array of repos\r\n     */\r\n    function searchRepo(e)  {\r\n        const searchLabel = e.target.value.toLowerCase();\r\n        if (searchLabel === '') {\r\n            setFilteredRepos(repos);\r\n        } else {\r\n            const tempRepos = repos.filter(repo => repo.name.toLowerCase().includes(searchLabel));\r\n            setFilteredRepos(tempRepos)\r\n        }\r\n\r\n    }\r\n\r\n    const getUser = () => {\r\n        axios.get(`https://api.github.com/users/` + user)\r\n            .then(res => {\r\n                setGithubUser(res.data);\r\n            })\r\n            .catch(error => {\r\n                history.push('/404');\r\n            });\r\n    }\r\n\r\n    const getRepos = () => {\r\n        axios.get(`https://api.github.com/users/` + user + '/repos')\r\n            .then(res => {\r\n                setRepos(res.data);\r\n                setFilteredRepos(res.data);\r\n                setIsLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isLoading ? (\r\n                <Loader\r\n                    className={'spinner'}\r\n                    type=\"Rings\"\r\n                    color=\"#e85c66\"\r\n                    height={100}\r\n                    width={100}\r\n                />\r\n            ) : (\r\n                <div className={'repos-container'}>\r\n                    <div className={'container'}>\r\n                        <div className={'user-infos-container col-md-3 col-12 me-4'}>\r\n                            <div className={'user-avatar-container'}>\r\n                                <img className={'user-avatar img-fluid'} src={githubUser.avatar_url} alt=\"\"/>\r\n                            </div>\r\n                            <div className={'user-infos'}>\r\n                                <div className={'user-name'}>{githubUser.name}</div>\r\n                                <div className={'underline-decoration my-2'}/>\r\n\r\n                                <div className={'user-login'}>{githubUser.login}</div>\r\n                                <div className={'user-bio'}>{githubUser.bio}</div>\r\n\r\n                                <div className={'user-followers-container'}>\r\n                                    <div className={'user-followers'}>\r\n                                        <FontAwesomeIcon className={'icon-followers me-3'} icon={faUsers} color={'#000000'}/>\r\n                                        <span className={'fw-bold me-1'}> {githubUser.followers}</span>\r\n                                        followers\r\n                                    </div>\r\n                                    <div className={'user-following'}>\r\n                                        <FontAwesomeIcon className={'icon-followers me-3'} icon={faUsers} color={'#000000'}/>\r\n                                        <span className={'fw-bold me-1'}>{githubUser.following}</span>\r\n                                        following\r\n                                    </div>\r\n                                    <div className={'user-stars'}>\r\n                                        <FontAwesomeIcon className={'icon-followers me-3'} icon={faStar} color={'#000000'}/>\r\n                                        <span className={'fw-bold me-1'}>{githubUser.following}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={'users-links-container'}>\r\n                                    {githubUser.email &&\r\n                                    <div className={'user-email'}>\r\n                                        <FontAwesomeIcon className={'me-3'} icon={faEnvelope} color={'#000000'}/>\r\n                                        {githubUser.email}\r\n                                    </div>}\r\n\r\n                                    {githubUser.blog &&\r\n                                    <div className={'user-website'}>\r\n                                        <FontAwesomeIcon className={'me-3'} icon={faLink} color={'#000000'}/>\r\n                                        <a href={githubUser.blog}>{githubUser.blog}</a>\r\n                                    </div>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={'user-repos-container col-md-9 col-12'}>\r\n                            <div className={'user-repos-header'}>\r\n                                <div className={'text-container'}>\r\n                                    <div className={'text'}>\r\n                                        Repositories\r\n                                    </div>\r\n                                    <div className={'underline-decoration'}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={'search-input-container mt-3'}>\r\n                                <input className={'search-input'}\r\n                                       onChange={(e) => searchRepo(e)}\r\n                                       type=\"text\"\r\n                                       placeholder={'Find a repository...'}/>\r\n                            </div>\r\n\r\n                            <div className={'repositories-container'}>\r\n                                {\r\n                                    filteredRepos.length ? (\r\n                                        filteredRepos.map(repo => <Repository key={repo.id} repo={repo}/> )\r\n                                    ) : (\r\n                                        <div className={'no-repos'}>No repositories found.</div>\r\n                                    )\r\n                                }\r\n                                {}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../Assets/Home.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default function Home() {\r\n\r\n    const [githubUser, setGithubUser] = useState('');\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n\r\n        /**\r\n         *  This event listener enables the search on clicking on \"Enter' button.\r\n         */\r\n\r\n        const input = document.getElementsByClassName('home-input')[0];\r\n\r\n        input.addEventListener('keyup', function (event) {\r\n            if (event.keyCode === 13) {\r\n                const button = document.getElementsByClassName('btn-search')[0];\r\n                button.click();\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    /**\r\n     * After giving the username of the github page, this function redirects\r\n     * to the appropriate github repositories for that user .\r\n     * We are using the react built-in 'useHistory' function to make the redirection\r\n     */\r\n\r\n    const redirectToGithubRepositories = () => {\r\n        if (githubUser !== '') history.push('/repositories/' + githubUser);\r\n    }\r\n\r\n    return (\r\n        <div className={'home-container'}>\r\n\r\n            {/**\r\n             * These divs are to display the background animation in the home page\r\n             * ( the animated stars in the background )\r\n             * there is 3 layers of stars, each layer has its own pace of speed.\r\n             */}\r\n            <div className={'stars'}/>\r\n            <div className={'stars-second'}/>\r\n            <div className={'stars-third'}/>\r\n\r\n            <div className={'github-icon-container'} >\r\n                <FontAwesomeIcon className={'github-icon'}  icon={ faGithub } color={'white'} size={'10x'} />\r\n            </div>\r\n\r\n            <div className={'home-title-container'}>\r\n                <span>\r\n                    Enter your GitHub name to get all the repositories\r\n                </span>\r\n                <div className={'home-input-container'}>\r\n                    <input className={'home-input'} type=\"text\" placeholder={'Ex: YassineGabsi'} onChange={(e) => setGithubUser(e.target.value)}/>\r\n                    <div className={'search-icon-container'}>\r\n                        <FontAwesomeIcon className={'search-icon'} icon={ faSearch } color={'#192330'} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button className={'btn-custom btn-search'} onClick={redirectToGithubRepositories}>\r\n                    Start searching !\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport '../Assets/NotFound.scss';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n\r\n    const history = useHistory();\r\n\r\n    const goHome = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className={'not-found-container d-flex justify-content-center align-items-center'}>\r\n            <div className={'not-found-label text-center'}>\r\n                Oops! Sorry this user doesn't exist!\r\n            </div>\r\n            <button className={'btn-custom'} onClick={goHome}>\r\n                Search again !\r\n            </button>\r\n        </div>\r\n    );\r\n}","import './App.scss';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Repositories from './Components/Repositories';\r\nimport Home from './Components/Home';\r\nimport NotFound from \"./Components/NotFound\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    {/** Repositories route **/}\r\n                    <Route path='/repositories/:user' component={Repositories}/>\r\n\r\n                    {/** Not found route ( when there is no user with the given name ) **/}\r\n                    <Route exact path='/404' component={NotFound}/>\r\n\r\n                    {/** Main page ( where the user can make his search ) **/}\r\n                    <Route exact path='/' component={Home}/>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}